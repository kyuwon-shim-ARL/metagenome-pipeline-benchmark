[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "metagenome-pipeline-benchmark"
dynamic = ["version"]
description = "A comprehensive benchmarking framework for metagenome analysis pipelines"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
authors = [
    {name = "Research Team", email = "research@example.com"},
]
keywords = ["metagenomics", "benchmarking", "bioinformatics", "nextflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.14.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "multiqc>=1.15",
    "biopython>=1.81",
    "tqdm>=4.65.0",
    "loguru>=0.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.0.275",
    "pre-commit>=3.3.0",
    "mypy>=1.4.0",
]
viz = [
    "dash>=2.10.0",
    "streamlit>=1.24.0",
    "kaleido>=0.2.1",
    "reportlab>=4.0.0",
    "weasyprint>=59.0",
]
workflow = [
    "snakemake>=7.30.0",
    "snakemake-executor-plugin-slurm>=0.2.0",
]

[project.urls]
Homepage = "https://github.com/your-org/metagenome-pipeline-benchmark"
Documentation = "https://your-org.github.io/metagenome-pipeline-benchmark"
Repository = "https://github.com/your-org/metagenome-pipeline-benchmark.git"
Issues = "https://github.com/your-org/metagenome-pipeline-benchmark/issues"

[project.scripts]
benchmark = "src.cli:main"
pipeline-compare = "src.comparison.cli:main"

[tool.hatch.version]
path = "src/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true